"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Attributes = (function () {
    function Attributes(protect, numeric, highlight, hidden, modified, blink, reverse, underscore, color) {
        if (protect === void 0) { protect = false; }
        if (numeric === void 0) { numeric = false; }
        if (highlight === void 0) { highlight = false; }
        if (hidden === void 0) { hidden = false; }
        if (modified === void 0) { modified = false; }
        if (blink === void 0) { blink = false; }
        if (reverse === void 0) { reverse = false; }
        if (underscore === void 0) { underscore = false; }
        if (color === void 0) { color = Color.DEFAULT; }
        this.protect = protect;
        this.numeric = numeric;
        this.highlight = highlight;
        this.hidden = hidden;
        this.modified = modified;
        this.blink = blink;
        this.reverse = reverse;
        this.underscore = underscore;
        this.color = color;
    }
    Attributes.fromByte = function (byte) {
        return new Attributes(((byte & 32) !== 0), ((byte & 16) !== 0), ((byte & 8) !== 0) && ((byte & 4) === 0), ((byte & 8) !== 0) && ((byte & 4) !== 0), ((byte & 1) !== 0));
    };
    Attributes.fromBytes = function (bytes) {
        var basic = 0;
        var blink = false;
        var reverse = false;
        var underscore = false;
        var color = Color.DEFAULT;
        for (var i = 0; i < bytes.length; i++) {
            switch (bytes[i]) {
                case TypeCode.BASIC:
                    basic = bytes[i + 1];
                    break;
                case TypeCode.HIGHLIGHT:
                    switch (bytes[i + 1]) {
                        case Highlight.BLINK:
                            blink = true;
                            break;
                        case Highlight.REVERSE:
                            reverse = true;
                            break;
                        case Highlight.UNDERSCORE:
                            underscore = true;
                            break;
                    }
                    break;
                case TypeCode.COLOR:
                    color = bytes[i + 1];
                    break;
            }
        }
        return new Attributes(((basic & 32) !== 0), ((basic & 16) !== 0), ((basic & 8) !== 0) && ((basic & 4) === 0), ((basic & 8) !== 0) && ((basic & 4) !== 0), ((basic & 1) !== 0), blink, reverse, underscore, color);
    };
    Attributes.prototype.toString = function () {
        return "Attributes protect=" + this.protect + " numeric=" + this.numeric + " highlight=" + this.highlight + " hidden=" + this.hidden + " modified=" + this.modified + " blink=" + this.blink + " reverse=" + this.reverse + " underscore=" + this.underscore + " color=" + this.color;
    };
    return Attributes;
}());
exports.Attributes = Attributes;
var Cell = (function () {
    function Cell(value, attributes) {
        this.value = value;
        this.attributes = attributes;
    }
    return Cell;
}());
exports.Cell = Cell;
var WCC = (function () {
    function WCC(alarm, reset, resetMDT, unlockKeyboard) {
        if (alarm === void 0) { alarm = false; }
        if (reset === void 0) { reset = false; }
        if (resetMDT === void 0) { resetMDT = false; }
        if (unlockKeyboard === void 0) { unlockKeyboard = false; }
        this.alarm = alarm;
        this.reset = reset;
        this.resetMDT = resetMDT;
        this.unlockKeyboard = unlockKeyboard;
    }
    WCC.fromByte = function (byte) {
        return new WCC(((byte & 4) !== 0), ((byte & 64) !== 0), ((byte & 1) !== 0), ((byte & 2) !== 0));
    };
    WCC.prototype.toByte = function () {
        var byte = 0;
        if (this.alarm)
            byte &= 4;
        if (this.reset)
            byte &= 64;
        if (this.resetMDT)
            byte &= 1;
        if (this.unlockKeyboard)
            byte &= 2;
        return byte;
    };
    WCC.prototype.toString = function () {
        return "WCC alarm=" + this.alarm + " reset=" + this.reset + " resetMDT=" + this.resetMDT + " unlockKeyboard=" + this.unlockKeyboard;
    };
    return WCC;
}());
exports.WCC = WCC;
function addressFromBytes(bytes) {
    var address = bytes[0];
    address &= 63;
    address = address << 6;
    address += bytes[1] & 63;
    return address;
}
exports.addressFromBytes = addressFromBytes;
function addressToBytes(address) {
    var bytes = new Uint8Array(2);
    var tr = [
        0x40, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,
        0xC8, 0xC9, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,
        0x50, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,
        0xD8, 0xD9, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,
        0x60, 0x61, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,
        0xE8, 0xE9, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,
        0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,
        0xF8, 0xF9, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F
    ];
    bytes[0] = tr[(address >> 6) & 63];
    bytes[1] = tr[address &= 63];
    return bytes;
}
exports.addressToBytes = addressToBytes;
function reverseMap(obj) {
    return Object.keys(obj).reduce(function (acc, k) {
        acc[String(obj[k])] = k;
        return acc;
    }, {});
}
exports.reverseMap = reverseMap;
var AID;
(function (AID) {
    AID[AID["DEFAULT"] = 136] = "DEFAULT";
    AID[AID["CLEAR"] = 109] = "CLEAR";
    AID[AID["ENTER"] = 125] = "ENTER";
    AID[AID["PA1"] = 108] = "PA1";
    AID[AID["PA2"] = 110] = "PA2";
    AID[AID["PA3"] = 107] = "PA3";
    AID[AID["PF1"] = 241] = "PF1";
    AID[AID["PF2"] = 242] = "PF2";
    AID[AID["PF3"] = 243] = "PF3";
    AID[AID["PF4"] = 244] = "PF4";
    AID[AID["PF5"] = 245] = "PF5";
    AID[AID["PF6"] = 246] = "PF6";
    AID[AID["PF7"] = 247] = "PF7";
    AID[AID["PF8"] = 248] = "PF8";
    AID[AID["PF9"] = 249] = "PF9";
    AID[AID["PF10"] = 122] = "PF10";
    AID[AID["PF11"] = 123] = "PF11";
    AID[AID["PF12"] = 124] = "PF12";
    AID[AID["PF13"] = 193] = "PF13";
    AID[AID["PF14"] = 194] = "PF14";
    AID[AID["PF15"] = 195] = "PF15";
    AID[AID["PF16"] = 196] = "PF16";
    AID[AID["PF17"] = 197] = "PF17";
    AID[AID["PF18"] = 198] = "PF18";
    AID[AID["PF19"] = 199] = "PF19";
    AID[AID["PF20"] = 200] = "PF20";
    AID[AID["PF21"] = 201] = "PF21";
    AID[AID["PF22"] = 74] = "PF22";
    AID[AID["PF23"] = 75] = "PF23";
    AID[AID["PF24"] = 76] = "PF24";
})(AID = exports.AID || (exports.AID = {}));
var Color;
(function (Color) {
    Color[Color["DEFAULT"] = 0] = "DEFAULT";
    Color[Color["BLUE"] = 241] = "BLUE";
    Color[Color["RED"] = 242] = "RED";
    Color[Color["PINK"] = 243] = "PINK";
    Color[Color["GREEN"] = 244] = "GREEN";
    Color[Color["TURQUOISE"] = 245] = "TURQUOISE";
    Color[Color["YELLOW"] = 246] = "YELLOW";
    Color[Color["WHITE"] = 247] = "WHITE";
})(Color = exports.Color || (exports.Color = {}));
var Command;
(function (Command) {
    Command[Command["EAU"] = 111] = "EAU";
    Command[Command["EW"] = 245] = "EW";
    Command[Command["EWA"] = 126] = "EWA";
    Command[Command["RB"] = 242] = "RB";
    Command[Command["RM"] = 246] = "RM";
    Command[Command["RMA"] = 110] = "RMA";
    Command[Command["W"] = 241] = "W";
    Command[Command["WSF"] = 243] = "WSF";
})(Command = exports.Command || (exports.Command = {}));
var Highlight;
(function (Highlight) {
    Highlight[Highlight["BLINK"] = 241] = "BLINK";
    Highlight[Highlight["REVERSE"] = 242] = "REVERSE";
    Highlight[Highlight["UNDERSCORE"] = 244] = "UNDERSCORE";
})(Highlight = exports.Highlight || (exports.Highlight = {}));
var Order;
(function (Order) {
    Order[Order["SF"] = 29] = "SF";
    Order[Order["SFE"] = 41] = "SFE";
    Order[Order["SBA"] = 17] = "SBA";
    Order[Order["SA"] = 40] = "SA";
    Order[Order["MF"] = 44] = "MF";
    Order[Order["IC"] = 19] = "IC";
    Order[Order["PT"] = 5] = "PT";
    Order[Order["RA"] = 60] = "RA";
    Order[Order["EUA"] = 18] = "EUA";
    Order[Order["GE"] = 8] = "GE";
})(Order = exports.Order || (exports.Order = {}));
var Telnet;
(function (Telnet) {
    Telnet[Telnet["BINARY"] = 0] = "BINARY";
    Telnet[Telnet["DO"] = 253] = "DO";
    Telnet[Telnet["DONT"] = 254] = "DONT";
    Telnet[Telnet["EOR"] = 25] = "EOR";
    Telnet[Telnet["IAC"] = 255] = "IAC";
    Telnet[Telnet["SB"] = 250] = "SB";
    Telnet[Telnet["SE"] = 240] = "SE";
    Telnet[Telnet["TERMINAL_TYPE"] = 24] = "TERMINAL_TYPE";
    Telnet[Telnet["WILL"] = 251] = "WILL";
    Telnet[Telnet["WONT"] = 252] = "WONT";
})(Telnet = exports.Telnet || (exports.Telnet = {}));
var TypeCode;
(function (TypeCode) {
    TypeCode[TypeCode["BASIC"] = 192] = "BASIC";
    TypeCode[TypeCode["HIGHLIGHT"] = 65] = "HIGHLIGHT";
    TypeCode[TypeCode["COLOR"] = 66] = "COLOR";
})(TypeCode = exports.TypeCode || (exports.TypeCode = {}));
//# sourceMappingURL=data:application/json;base64,