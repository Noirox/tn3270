"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ebcdic = [
    ' ',
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    '¢',
    '.',
    '<',
    '(',
    '+',
    '|',
    '&',
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    '!',
    '$',
    '*',
    ')',
    ';',
    '¬',
    '-',
    '/',
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    ',',
    '%',
    '_',
    '>',
    '?',
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    ':',
    '#',
    '@',
    '\'',
    '=',
    '\"',
    null,
    'a',
    'b',
    'c',
    'd',
    'e',
    'f',
    'g',
    'h',
    'i',
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    'j',
    'k',
    'l',
    'm',
    'n',
    'o',
    'p',
    'q',
    'r',
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    's',
    't',
    'u',
    'v',
    'w',
    'x',
    'y',
    'z',
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    '`',
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
    null,
    null,
    null,
    null,
    null,
    null,
    '0',
    '1',
    '2',
    '3',
    '4',
    '5',
    '6',
    '7',
    '8',
    '9',
    null,
    null,
    null,
    null,
    null,
    null
];
var ascii = new Array(256);
for (var i = 0; i < ebcdic.length; i++) {
    if (ebcdic[i] !== null)
        ascii[ebcdic[i].charCodeAt(0)] = i + 64;
}
function a2e(a) {
    var e = new Uint8Array(a.length);
    for (var i = 0; i < a.length; i++)
        e[i] = ascii[a.charCodeAt(i)];
    return e;
}
exports.a2e = a2e;
function e2a(e) {
    var a = '';
    for (var i = 0; i < e.length; i++)
        a += ebcdic[e[i] - 64];
    return a;
}
exports.e2a = e2a;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9jb252ZXJ0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBUUEsSUFBTSxNQUFNLEdBQVU7SUFDcEIsR0FBRztJQUNILElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILElBQUk7SUFDSixHQUFHO0lBQ0gsSUFBSTtJQUNKLElBQUk7SUFDSixHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osR0FBRztJQUNGLEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLEdBQUc7SUFFSCxJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLEdBQUc7SUFDRixHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0lBQ0osSUFBSTtJQUNKLElBQUk7SUFDSixJQUFJO0NBQ0wsQ0FBQztBQUdGLElBQU0sS0FBSyxHQUFHLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBRTdCLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO0lBQ3ZDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLENBQUM7UUFDckIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQzVDLENBQUM7QUFNRCxhQUFvQixDQUFTO0lBQzNCLElBQU0sQ0FBQyxHQUFHLElBQUksVUFBVSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNuQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFO1FBQy9CLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2hDLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFDWCxDQUFDO0FBTEQsa0JBS0M7QUFNRCxhQUFvQixDQUFhO0lBQy9CLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNYLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUU7UUFDL0IsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDekIsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUNYLENBQUM7QUFMRCxrQkFLQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29udmVyc2lvbiBiZXR3ZWVuIEVCQ0RJQyBhbmQgQVNDSUlcbiAqXG4gKiBAc2VlIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzI1MzY3MTIwL1xuICAgICAgICAgIGV4YW1wbGUtZWJjZGljLWZpbGUtZm9yLWphdmEtcHJvZ3JhbS10by1jb252ZXJ0LWViY2RpYy10by1hc2NpaVxuICovXG5cbi8qKiBOT1RFOiBzdGFydHMgYXQgcG9zaXRpb24gNjQgKi9cbmNvbnN0IGViY2RpYzogYW55W10gPSBbXG4gICcgJyxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgJ8KiJyxcbiAgJy4nLFxuICAnPCcsXG4gICcoJyxcbiAgJysnLFxuICAnfCcsXG4gICcmJyxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgJyEnLFxuICAnJCcsXG4gICcqJyxcbiAgJyknLFxuICAnOycsXG4gICfCrCcsXG4gICctJyxcbiAgJy8nLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICAnLCcsXG4gICclJyxcbiAgJ18nLFxuICAnPicsXG4gICc/JyxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgJzonLFxuICAnIycsXG4gICdAJyxcbiAgJ1xcJycsXG4gICc9JyxcbiAgJ1xcXCInLFxuICBudWxsLFxuICAnYScsXG4gICdiJyxcbiAgJ2MnLFxuICAnZCcsXG4gICdlJyxcbiAgJ2YnLFxuICAnZycsXG4gICdoJyxcbiAgJ2knLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICAnaicsXG4gICAnaycsXG4gICAnbCcsXG4gICAnbScsXG4gICAnbicsXG4gICAnbycsXG4gICAncCcsXG4gICAncScsXG4gICAncicsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGwsXG4gICdzJyxcbiAgJ3QnLFxuICAndScsXG4gICd2JyxcbiAgJ3cnLFxuICAneCcsXG4gICd5JyxcbiAgJ3onLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICAnYCcsXG5cbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgJ0EnLFxuICAnQicsXG4gICdDJyxcbiAgJ0QnLFxuICAnRScsXG4gICdGJyxcbiAgJ0cnLFxuICAnSCcsXG4gICdJJyxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgJ0onLFxuICAgJ0snLFxuICAgJ0wnLFxuICAgJ00nLFxuICAgJ04nLFxuICAgJ08nLFxuICAgJ1AnLFxuICAgJ1EnLFxuICAgJ1InLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICAnUycsXG4gICdUJyxcbiAgJ1UnLFxuICAnVicsXG4gICdXJyxcbiAgJ1gnLFxuICAnWScsXG4gICdaJyxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgJzAnLFxuICAnMScsXG4gICcyJyxcbiAgJzMnLFxuICAnNCcsXG4gICc1JyxcbiAgJzYnLFxuICAnNycsXG4gICc4JyxcbiAgJzknLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG5dO1xuXG4vLyByZXZlcnNlIGVuZ2luZWVyIGFzY2lpXG5jb25zdCBhc2NpaSA9IG5ldyBBcnJheSgyNTYpO1xuXG5mb3IgKGxldCBpID0gMDsgaSA8IGViY2RpYy5sZW5ndGg7IGkrKykge1xuICBpZiAoZWJjZGljW2ldICE9PSBudWxsKVxuICAgIGFzY2lpW2ViY2RpY1tpXS5jaGFyQ29kZUF0KDApXSA9IGkgKyA2NDtcbn1cblxuLyoqXG4gKiBDb252ZXJ0IGZyb20gQVNDSUkgdG8gRUJDRElDXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGEyZShhOiBzdHJpbmcpOiBVaW50OEFycmF5IHtcbiAgY29uc3QgZSA9IG5ldyBVaW50OEFycmF5KGEubGVuZ3RoKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKVxuICAgIGVbaV0gPSBhc2NpaVthLmNoYXJDb2RlQXQoaSldO1xuICByZXR1cm4gZTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0IGZyb20gRUJDRElDIHRvIEFTQ0lJXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGUyYShlOiBVaW50OEFycmF5KTogc3RyaW5nIHtcbiAgbGV0IGEgPSAnJztcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBlLmxlbmd0aDsgaSsrKVxuICAgIGEgKz0gZWJjZGljW2VbaV0gLSA2NF07XG4gIHJldHVybiBhO1xufVxuIl19